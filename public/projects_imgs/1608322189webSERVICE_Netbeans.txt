package com.crode.ejemplowebserv;

import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;

import org.ksoap2.SoapEnvelope;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;

import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
    final String NAMESPACE = "http://wService/";
    final String URL = "http://192.168.137.97:8080/EjemploWebService/procesoWebService?wsdl";

    final String METHOD_SAVE = "save";
    final String SOAP_ACTION_SAVE = "http://wService/save";
    final String METHOD_UPDATE = "update";
    final String SOAP_ACTION_UPDATE = "http://wService/update";
    final String METHOD_DELETE = "delete";
    final String SOAP_ACTION_DELETE = "http://wService/delete";
    final String METHOD_SEARCH = "searchUser";
    final String SOAP_ACTION_SEARCH = "http://wService/searchUser";
    final String METHOD_MOSTRARNOMBRE = "mostrarNombre";
    final String SOAP_ACTION_MOSTRARNOMBRE = "http://wService/mostrarNombre";
    final String METHOD_MOSTRARAPE = "mostrarApellidos";
    final String SOAP_ACTION_MOSTRARAPE = "http://wService/mostrarApellios";
    final String METHOD_MOSTRARMAIL = "mostrarCorreo";
    final String SOAP_ACTION_MOSTRARMAIL = "http://wService/mostrarCorreo";
    final String METHOD_MOSTRARID = "mostrarId";
    final String SOAP_ACTION_MOSTRARID = "http://wService/mostrarId";


    public EditText name;
    public EditText apellidos;
    public EditText email;
    public EditText mostrar;
    private boolean boolres = false;
    private boolean resultadoSW = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    public void guardar(View view) {
        new GuardarAsyc().execute();
    }

    public void modificar(View view) {
        new modificarAsyc().execute();
    }

    public void eliminar(View view) {
        new eliminarAsyc().execute();
    }

    public void buscar(View view) {
        new buscarAsyc().execute();
    }


    /*_______________________GUARDAR USUARIO__________________________________*/


    public boolean invoceWS() {

        boolean res = false;
        try {

            name = (EditText) findViewById(R.id.edNombre);
            apellidos = (EditText) findViewById(R.id.edApellidos);
            email = (EditText) findViewById(R.id.edCorreo);
            mostrar = (EditText) findViewById(R.id.edBuscar);

            SoapObject request = new SoapObject(NAMESPACE, METHOD_SAVE);
            request.addProperty("arg0", name.getText().toString());
            request.addProperty("arg1", apellidos.getText().toString());
            request.addProperty("arg2", email.getText().toString());

            SoapSerializationEnvelope sobre = new SoapSerializationEnvelope(SoapEnvelope.VER11);
            sobre.setOutputSoapObject(request);
            HttpTransportSE transporte = new HttpTransportSE(URL);
            transporte.call(SOAP_ACTION_SAVE, sobre);
            Object soapObject = soapObject = (Object) sobre.getResponse();

            if (soapObject != null) {
                resultadoSW = Boolean.parseBoolean(soapObject.toString());
            }
            res = true;
        } catch (Exception e) {
            Log.e(String.valueOf(R.string.msg1), e.getMessage());
        }
        return res;
    }

    private class GuardarAsyc extends android.os.AsyncTask<Void, Void, Void> {

        @Override
        protected Void doInBackground(Void... voids) {
            boolres = invoceWS();
            return null;
        }

        @Override
        protected void onPostExecute(Void result) {
            name = (EditText) findViewById(R.id.edNombre);
            apellidos = (EditText) findViewById(R.id.edApellidos);
            email = (EditText) findViewById(R.id.edCorreo);
            mostrar = (EditText) findViewById(R.id.edBuscar);
            if (boolres) {
                if (resultadoSW) {
                    Toast.makeText(getApplicationContext(), R.string.msg2, Toast.LENGTH_SHORT).show();
                } else {
                    Toast.makeText(getApplicationContext(), R.string.msg3, Toast.LENGTH_SHORT).show();
                    name.setText("");
                    apellidos.setText("");
                    email.setText("");
                    mostrar.setText("");
                }
            }
            Toast.makeText(getApplicationContext(), R.string.msg4, Toast.LENGTH_SHORT).show();
        }

        @Override
        protected void onPreExecute() {
            Toast.makeText(getApplicationContext(), R.string.msg5, Toast.LENGTH_SHORT).show();
        }

        /*---------------------------------BUSQUEDA------------------------------*/
        public boolean invoceWS2() {
            boolean res = false;
            try {
                EditText codigo = (EditText) findViewById(R.id.edBuscar);
                SoapObject request = new SoapObject(NAMESPACE, METHOD_SEARCH);
                request.addProperty("arg0", codigo.getText().toString());
                SoapSerializationEnvelope sobre = new SoapSerializationEnvelope(SoapEnvelope.VER11);
                sobre.setOutputSoapObject(request);
                HttpTransportSE transporte = new HttpTransportSE(URL);
                transporte.call(SOAP_ACTION_SEARCH, sobre);
                Object soapObject = soapObject = (Object) sobre.getResponse();

                if (soapObject != null) {
                    resultadoSW = Boolean.parseBoolean(soapObject.toString());
                }

                res = true;
            } catch (Exception e) {
                Log.e(String.valueOf(R.string.msg1), e.getMessage());
            }

            return res;
        }

        SoapPrimitive id;

        public boolean id() {
            boolean res = false;
            try {
                SoapObject request = new SoapObject(NAMESPACE, METHOD_MOSTRARID);
                SoapSerializationEnvelope sobre = new SoapSerializationEnvelope(SoapEnvelope.VER11);
                sobre.setOutputSoapObject(request);
                HttpTransportSE transporte = new HttpTransportSE(URL);
                transporte.call(SOAP_ACTION_MOSTRARID, sobre);
                Object soapObject = soapObject = (Object) sobre.getResponse();
                id = (SoapPrimitive) sobre.getResponse();
                res = true;
            } catch (Exception e) {
                Log.e(String.valueOf(R.string.msg1), e.getMessage());
            }
            return res;
        }

        SoapPrimitive nom;

        public boolean nombre() {
            boolean res = false;
            try {
                SoapObject request = new SoapObject(NAMESPACE, METHOD_MOSTRARNOMBRE);
                SoapSerializationEnvelope sobre = new SoapSerializationEnvelope(SoapEnvelope.VER11);
                sobre.setOutputSoapObject(request);
                HttpTransportSE transporte = new HttpTransportSE(URL);
                transporte.call(SOAP_ACTION_MOSTRARNOMBRE, sobre);
                Object soapObject = soapObject = (Object) sobre.getResponse();
                nom = (SoapPrimitive) sobre.getResponse();
                res = true;
            } catch (Exception e) {
                Log.e(String.valueOf(R.string.msg1), e.getMessage());
            }
            return res;
        }

        SoapPrimitive ape;

        public boolean apellidos() {
            boolean res = false;
            try {

                SoapObject request = new SoapObject(NAMESPACE, METHOD_MOSTRARAPE);
                SoapSerializationEnvelope sobre = new SoapSerializationEnvelope(SoapEnvelope.VER11);
                sobre.setOutputSoapObject(request);
                HttpTransportSE transporte = new HttpTransportSE(URL);
                transporte.call(SOAP_ACTION_MOSTRARAPE, sobre);
                Object soapObject = soapObject = (Object) sobre.getResponse();
                ape = (SoapPrimitive) sobre.getResponse();
                res = true;
            } catch (Exception e) {
                Log.e(String.valueOf(R.string.msg1), e.getMessage());
            }
            return res;
        }

        SoapPrimitive correo;

        public boolean correo() {
            boolean res = false;
            try {

                SoapObject request = new SoapObject(NAMESPACE, METHOD_MOSTRARMAIL);
                SoapSerializationEnvelope sobre = new SoapSerializationEnvelope(SoapEnvelope.VER11);
                sobre.setOutputSoapObject(request);
                HttpTransportSE transporte = new HttpTransportSE(URL);
                transporte.call(SOAP_ACTION_MOSTRARMAIL, sobre);
                Object soapObject = soapObject = (Object) sobre.getResponse();
                correo = (SoapPrimitive) sobre.getResponse();
                res = true;
            } catch (Exception e) {
                Log.e(String.valueOf(R.string.msg1), e.getMessage());
            }
            return res;
        }


        private class buscarAsyc extends android.os.AsyncTask<Void, Void, Void> {
            @Override
            protected Void doInBackground(Void... voids) {
                boolres = invoceWS2();
                boolres = id();
                boolres = nombre();
                boolres = apellidos();
                boolres = correo();
                return null;
            }

            @Override
            protected void onPostExecute(Void result) {
                name = (EditText) findViewById(R.id.edNombre);
                apellidos = (EditText) findViewById(R.id.edApellidos);
                email = (EditText) findViewById(R.id.edCorreo);
                mostrar = (EditText) findViewById(R.id.edBuscar);
                if (boolres) {
                    if (resultadoSW) {
                        Toast.makeText(getApplicationContext(), R.string.msg6, Toast.LENGTH_SHORT).show();
                    } else {
                        name.setText("" + nom);
                        apellidos.setText("" + ape);
                        email.setText("" + correo);
                        mostrar.setText("" + id);
                        Toast.makeText(getApplicationContext(), R.string.msg7, Toast.LENGTH_SHORT).show();
                    }
                }

                mostrar.setText(id + "");
                String nuevo = mostrar.getText().toString();
                int nuevoid = Integer.parseInt(nuevo);

                if (nuevoid == 0) {
                    Toast.makeText(getApplicationContext(), R.string.msg8, Toast.LENGTH_SHORT).show();
                    mostrar.setText("");
                    name.setText("");
                    apellidos.setText("");
                    email.setText("");
                } else {
                    Toast.makeText(getApplicationContext(), R.string.msg4, Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            protected void onPreExecute() {
                Toast.makeText(getApplicationContext(), R.string.msg9, Toast.LENGTH_SHORT).show();
            }
        }
/*_______________________--Eliminar Usuario______________________*/
        public boolean invoceWS3() {
            boolean res = false;
            try {
                EditText codigo = (EditText) findViewById(R.id.edBuscar);

                SoapObject request = new SoapObject(NAMESPACE, METHOD_DELETE);
                request.addProperty("arg0", codigo.getText().toString());
                SoapSerializationEnvelope sobre = new SoapSerializationEnvelope(SoapEnvelope.VER11);

                sobre.setOutputSoapObject(request);
                HttpTransportSE transporte = new HttpTransportSE(URL);
                transporte.call(SOAP_ACTION_DELETE, sobre);
                Object soapObject = soapObject = (Object) sobre.getResponse();


                if (soapObject != null) {
                    resultadoSW = Boolean.parseBoolean(soapObject.toString());
                }
                res = true;
            } catch (Exception e) {
                Log.e(String.valueOf(R.string.msg1), e.getMessage());
            }

            return res;
        }

        private class eliminarAsyc extends android.os.AsyncTask<Void, Void, Void> {
            @Override
            protected Void doInBackground(Void... voids) {
                boolres = invoceWS3();
                return null;
            }

            @Override
            protected void onPostExecute(Void result) {
                name = (EditText) findViewById(R.id.edNombre);
                apellidos = (EditText) findViewById(R.id.edApellidos);
                email = (EditText) findViewById(R.id.edCorreo);
                mostrar = (EditText) findViewById(R.id.edBuscar);

                if (boolres) {
                    if (resultadoSW) {
                        Toast.makeText(getApplicationContext(), R.string.msg10, Toast.LENGTH_SHORT).show();
                        //finish();
                    } else {
                        Toast.makeText(getApplicationContext(), R.string.msg11, Toast.LENGTH_SHORT).show();
                        name.setText("");
                        apellidos.setText("");
                        email.setText("");
                        mostrar.setText("");
                    }
                }
                Toast.makeText(getApplicationContext(), R.string.msg4, Toast.LENGTH_SHORT).show();
            }

            @Override
            protected void onPreExecute() {
                Toast.makeText(getApplicationContext(), R.string.msg12, Toast.LENGTH_SHORT).show();
            }
        }

        /*__________________________Modificar________________________*/
        public boolean invoceWS4() {
            boolean res = false;
            try {
                name = (EditText) findViewById(R.id.edNombre);
                apellidos = (EditText) findViewById(R.id.edApellidos);
                email = (EditText) findViewById(R.id.edCorreo);
                mostrar = (EditText) findViewById(R.id.edBuscar);

                SoapObject request = new SoapObject(NAMESPACE, METHOD_UPDATE);
                request.addProperty("arg0", mostrar.getText().toString());
                request.addProperty("arg1", name.getText().toString());
                request.addProperty("arg2", apellidos.getText().toString());
                request.addProperty("arg3", email.getText().toString());

                SoapSerializationEnvelope sobre = new SoapSerializationEnvelope(SoapEnvelope.VER11);
                sobre.setOutputSoapObject(request);
                HttpTransportSE transporte = new HttpTransportSE(URL);
                transporte.call(SOAP_ACTION_UPDATE, sobre);
                Object soapObject = soapObject = (Object) sobre.getResponse();

                if (soapObject != null) {
                    resultadoSW = Boolean.parseBoolean(soapObject.toString());
                }
                res = true;
            } catch (Exception e) {
                Log.e(String.valueOf(R.string.msg1), e.getMessage());
            }

            return res;
        }

        private class modificarAsyc extends android.os.AsyncTask<Void, Void, Void> {
            @Override
            protected Void doInBackground(Void... voids) {
                boolres = invoceWS4();
                return null;
            }

            @Override
            protected void onPostExecute(Void result) {
                name = (EditText) findViewById(R.id.edNombre);
                apellidos = (EditText) findViewById(R.id.edApellidos);
                email = (EditText) findViewById(R.id.edCorreo);
                mostrar = (EditText) findViewById(R.id.edBuscar);

                if (boolres) {
                    if (resultadoSW) {
                        Toast.makeText(getApplicationContext(), R.string.msg13, Toast.LENGTH_SHORT).show();

                    } else {
                        Toast.makeText(getApplicationContext(), R.string.msg14, Toast.LENGTH_SHORT).show();

                        name.setText("");
                        apellidos.setText("");
                        email.setText("");
                    }
                }

                Toast.makeText(getApplicationContext(), R.string.msg4, Toast.LENGTH_SHORT).show();
            }

            @Override
            protected void onPreExecute() {
                Toast.makeText(getApplicationContext(), R.string.msg15, Toast.LENGTH_SHORT).show();
            }
        }
    }
}